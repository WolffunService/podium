name: podium dev

on:
  push:
    branches:
      - master
  workflow_dispatch:
    inputs:
      confirmDeployment:
        description: 'Confirm Deployment'
        required: true

env:
  PROJECT_ID: thetan-dev
  GKE_CLUSTER: thetan-dev-gke
  GKE_ZONE: asia-southeast1-c
  DEPLOYMENT_NAME: podium
  IMAGE_NAME: podium
  AR_REPOSITORY_NAME: thetan-arena
  AR_URL: asia-southeast1-docker.pkg.dev
  KUSTOMIZE_VERSION: 4.4.0
  WORKLOAD_IDENTITY_PROVIDER: projects/759132146017/locations/global/workloadIdentityPools/github-actions/providers/github-oidc
  SERVICE_ACCOUNT: gh-action-push-deploy@thetan-dev.iam.gserviceaccount.com

jobs:
  setup-build-publish-deploy:
    name: Setup, Build, Publish, and Deploy
    runs-on: ubuntu-latest
    permissions:
      contents: read
      id-token: write

    steps:
    - name: Checkout
      uses: actions/checkout@v2
      with:
        path: source

    - id: auth
      name: Authenticate to Google Cloud
      uses: google-github-actions/auth@v0
      with:
        workload_identity_provider: ${{ env.WORKLOAD_IDENTITY_PROVIDER }}
        service_account: ${{ env.SERVICE_ACCOUNT }}

    - name: Set up Cloud SDK
      uses: google-github-actions/setup-gcloud@v0

    - name: Configure Artifact Registry Credentials
      run: |-
        gcloud auth configure-docker ${AR_URL}

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v1

    - name: Build and push
      uses: docker/build-push-action@v2
      with:
        context: ./source
        push: true
        tags: ${{ env.IMAGE_FULL_NAME }}:${{ github.sha }}
        cache-from: type=registry,ref=${{ env.IMAGE_FULL_NAME }}:buildcache
        cache-to: type=registry,ref=${{ env.IMAGE_FULL_NAME }}:buildcache,mode=max
      env:
        IMAGE_FULL_NAME: ${{ env.AR_URL }}/${{ env.PROJECT_ID }}/${{ env.AR_REPOSITORY_NAME }}/${{ env.IMAGE_NAME }}

    - name: Getting GKE credentials
      run: |-
        gcloud container clusters get-credentials "$GKE_CLUSTER" --zone "$GKE_ZONE"

    - name: Set up Kustomize
      run: |-
        curl -SsLO https://github.com/kubernetes-sigs/kustomize/releases/download/kustomize/v${KUSTOMIZE_VERSION}/kustomize_v${KUSTOMIZE_VERSION}_linux_amd64.tar.gz
        tar -C /usr/local/bin/ -xf kustomize_v${KUSTOMIZE_VERSION}_linux_amd64.tar.gz
        kustomize version

    - name: Deploy
      run: |-
        kustomize edit set image gcr.io/PROJECT_ID/IMAGE:TAG=${DEPLOY_IMAGE}
        kustomize build . | kubectl apply -f -
        kubectl rollout status deployment/$DEPLOYMENT_NAME
      env:
        DEPLOY_IMAGE: ${{ env.AR_URL }}/${{ env.PROJECT_ID }}/${{ env.AR_REPOSITORY_NAME }}/${{ env.IMAGE_NAME }}:${{ github.sha }}
      working-directory: source/k8s/overlays/dev
